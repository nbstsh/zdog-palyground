{"version":3,"sources":["node_modules/zdog/js/boilerplate.js","node_modules/zdog/js/canvas-renderer.js","node_modules/zdog/js/svg-renderer.js","node_modules/zdog/js/vector.js","node_modules/zdog/js/anchor.js","node_modules/zdog/js/dragger.js","node_modules/zdog/js/illustration.js","node_modules/zdog/js/path-command.js","node_modules/zdog/js/shape.js","node_modules/zdog/js/group.js","node_modules/zdog/js/rect.js","node_modules/zdog/js/rounded-rect.js","node_modules/zdog/js/ellipse.js","node_modules/zdog/js/polygon.js","node_modules/zdog/js/hemisphere.js","node_modules/zdog/js/cylinder.js","node_modules/zdog/js/cone.js","node_modules/zdog/js/box.js","node_modules/zdog/js/index.js","js/zdog.js","js/kirby.js","js/kirby-face.js","js/index.js"],"names":["illo","Zdog","Illustration","element","zoom","animate","rotate","y","updateRenderGraph","requestAnimationFrame","Ellipse","addTo","diameter","translate","z","stroke","color","Rect","width","height","fill","sceneSize","isSpinning","TAU","pink","blush","black","shoe","red","yellow","dragRotate","onDragStart","body","Shape","x","face","Anchor","forEach","xSide","eyeGroup","Group","cheekHolder","path","bezier","rightArm","copy","rightFoot","arc","closed","umbrella","starPath","i","radius","angle","point","Math","cos","sin","push","star","umbPanelX","umbPanelZ","colorSide","floor","starHolder","COLOR_PINK","COLOR_BLUSH","COLOR_BLACK","COLOR_RED","generateIllo","addBodyToIllo","addFaceToBody","addEyeToFace","rate","addCheeckToFace","addMouthToFace","initIllo","movementX","movementY","canvasEl","document","querySelector","addEventListener","e"],"mappings":"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","file":"js.179ef2eb.js","sourceRoot":"..","sourcesContent":["/*!\n * Zdog v1.1.0\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2019 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n}( this, function factory() {\n\nvar Zdog = {};\n\nZdog.TAU = Math.PI * 2;\n\nZdog.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\nZdog.lerp = function( a, b, alpha ) {\n  return ( b - a ) * alpha + a;\n};\n\nZdog.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\nvar powerMultipliers = {\n  2: function( a ) {\n    return a * a;\n  },\n  3: function( a ) {\n    return a * a * a;\n  },\n  4: function( a ) {\n    return a * a * a * a;\n  },\n  5: function( a ) {\n    return a * a * a * a * a;\n  },\n};\n\nZdog.easeInOut = function( alpha, power ) {\n  if ( power == 1 ) {\n    return alpha;\n  }\n  alpha = Math.max( 0, Math.min( 1, alpha ) );\n  var isFirstHalf = alpha < 0.5;\n  var slope = isFirstHalf ? alpha : 1 - alpha;\n  slope /= 0.5;\n  // make easing steeper with more multiples\n  var powerMultiplier = powerMultipliers[ power ] || powerMultipliers[2];\n  var curve = powerMultiplier( slope );\n  curve /= 2;\n  return isFirstHalf ? curve : 1 - curve;\n};\n\nreturn Zdog;\n\n}));\n","/**\n * CanvasRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n}( this, function factory() {\n\nvar CanvasRenderer = { isCanvas: true };\n\nCanvasRenderer.begin = function( ctx ) {\n  ctx.beginPath();\n};\n\nCanvasRenderer.move = function( ctx, elem, point ) {\n  ctx.moveTo( point.x, point.y );\n};\n\nCanvasRenderer.line = function( ctx, elem, point ) {\n  ctx.lineTo( point.x, point.y );\n};\n\nCanvasRenderer.bezier = function( ctx, elem, cp0, cp1, end ) {\n  ctx.bezierCurveTo( cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y );\n};\n\nCanvasRenderer.closePath = function( ctx ) {\n  ctx.closePath();\n};\n\nCanvasRenderer.setPath = function() {};\n\nCanvasRenderer.renderPath = function( ctx, elem, pathCommands, isClosed ) {\n  this.begin( ctx, elem );\n  pathCommands.forEach( function( command ) {\n    command.render( ctx, elem, CanvasRenderer );\n  });\n  if ( isClosed ) {\n    this.closePath( ctx, elem );\n  }\n};\n\nCanvasRenderer.stroke = function( ctx, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.stroke();\n};\n\nCanvasRenderer.fill = function( ctx, elem, isFill, color ) {\n  if ( !isFill ) {\n    return;\n  }\n  ctx.fillStyle = color;\n  ctx.fill();\n};\n\nCanvasRenderer.end = function() {};\n\nreturn CanvasRenderer;\n\n}));\n","/**\n * SvgRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n}( this, function factory() {\n\nvar SvgRenderer = { isSvg: true };\n\n// round path coordinates to 3 decimals\nvar round = SvgRenderer.round = function( num ) {\n  return Math.round( num * 1000 ) / 1000;\n};\n\nfunction getPointString( point ) {\n  return round( point.x ) + ',' + round( point.y ) + ' ';\n}\n\nSvgRenderer.begin = function() {};\n\nSvgRenderer.move = function( svg, elem, point ) {\n  return 'M' + getPointString( point );\n};\n\nSvgRenderer.line = function( svg, elem, point ) {\n  return 'L' + getPointString( point );\n};\n\nSvgRenderer.bezier = function( svg, elem, cp0, cp1, end ) {\n  return 'C' + getPointString( cp0 ) + getPointString( cp1 ) +\n    getPointString( end );\n};\n\nSvgRenderer.closePath = function(/* elem */) {\n  return 'Z';\n};\n\nSvgRenderer.setPath = function( svg, elem, pathValue ) {\n  elem.setAttribute( 'd', pathValue );\n};\n\nSvgRenderer.renderPath = function( svg, elem, pathCommands, isClosed ) {\n  var pathValue = '';\n  pathCommands.forEach( function( command ) {\n    pathValue += command.render( svg, elem, SvgRenderer );\n  });\n  if ( isClosed ) {\n    pathValue += this.closePath( svg, elem );\n  }\n  this.setPath( svg, elem, pathValue );\n};\n\nSvgRenderer.stroke = function( svg, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  elem.setAttribute( 'stroke', color );\n  elem.setAttribute( 'stroke-width', lineWidth );\n};\n\nSvgRenderer.fill = function( svg, elem, isFill, color ) {\n  var fillColor = isFill ? color : 'none';\n  elem.setAttribute( 'fill', fillColor );\n};\n\nSvgRenderer.end = function( svg, elem ) {\n  svg.appendChild( elem );\n};\n\nreturn SvgRenderer;\n\n}));\n","/**\n * Vector\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory( Zdog );\n  }\n\n}( this, function factory( utils ) {\n\nfunction Vector( position ) {\n  this.set( position );\n}\n\nvar TAU = utils.TAU;\n\n// 'pos' = 'position'\nVector.prototype.set = function( pos ) {\n  this.x = pos && pos.x || 0;\n  this.y = pos && pos.y || 0;\n  this.z = pos && pos.z || 0;\n  return this;\n};\n\n// set coordinates without sanitizing\n// vec.write({ y: 2 }) only sets y coord\nVector.prototype.write = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x = pos.x != undefined ? pos.x : this.x;\n  this.y = pos.y != undefined ? pos.y : this.y;\n  this.z = pos.z != undefined ? pos.z : this.z;\n  return this;\n};\n\nVector.prototype.rotate = function( rotation ) {\n  if ( !rotation ) {\n    return;\n  }\n  this.rotateZ( rotation.z );\n  this.rotateY( rotation.y );\n  this.rotateX( rotation.x );\n  return this;\n};\n\nVector.prototype.rotateZ = function( angle ) {\n  rotateProperty( this, angle, 'x', 'y' );\n};\n\nVector.prototype.rotateX = function( angle ) {\n  rotateProperty( this, angle, 'y', 'z' );\n};\n\nVector.prototype.rotateY = function( angle ) {\n  rotateProperty( this, angle, 'x', 'z' );\n};\n\nfunction rotateProperty( vec, angle, propA, propB ) {\n  if ( !angle || angle % TAU === 0 ) {\n    return;\n  }\n  var cos = Math.cos( angle );\n  var sin = Math.sin( angle );\n  var a = vec[ propA ];\n  var b = vec[ propB ];\n  vec[ propA ] = a*cos - b*sin;\n  vec[ propB ] = b*cos + a*sin;\n}\n\nVector.prototype.isSame = function( pos ) {\n  if ( !pos ) {\n    return false;\n  }\n  return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n};\n\nVector.prototype.add = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x += pos.x || 0;\n  this.y += pos.y || 0;\n  this.z += pos.z || 0;\n  return this;\n};\n\nVector.prototype.subtract = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x -= pos.x || 0;\n  this.y -= pos.y || 0;\n  this.z -= pos.z || 0;\n  return this;\n};\n\nVector.prototype.multiply = function( pos ) {\n  if ( pos == undefined ) {\n    return this;\n  }\n  // multiple all values by same number\n  if ( typeof pos == 'number' ) {\n    this.x *= pos;\n    this.y *= pos;\n    this.z *= pos;\n  } else {\n    // multiply object\n    this.x *= pos.x != undefined ? pos.x : 1;\n    this.y *= pos.y != undefined ? pos.y : 1;\n    this.z *= pos.z != undefined ? pos.z : 1;\n  }\n  return this;\n};\n\nVector.prototype.transform = function( translation, rotation, scale ) {\n  this.multiply( scale );\n  this.rotate( rotation );\n  this.add( translation );\n  return this;\n};\n\nVector.prototype.lerp = function( pos, alpha ) {\n  this.x = utils.lerp( this.x, pos.x || 0, alpha );\n  this.y = utils.lerp( this.y, pos.y || 0, alpha );\n  this.z = utils.lerp( this.z, pos.z || 0, alpha );\n  return this;\n};\n\nVector.prototype.magnitude = function() {\n  var sum = this.x*this.x + this.y*this.y + this.z*this.z;\n  return getMagnitudeSqrt( sum );\n};\n\nfunction getMagnitudeSqrt( sum ) {\n  // PERF: check if sum ~= 1 and skip sqrt\n  if ( Math.abs( sum - 1 ) < 0.00000001 ) {\n    return 1;\n  }\n  return Math.sqrt( sum );\n}\n\nVector.prototype.magnitude2d = function() {\n  var sum = this.x*this.x + this.y*this.y;\n  return getMagnitudeSqrt( sum );\n};\n\nVector.prototype.copy = function() {\n  return new Vector( this );\n};\n\nreturn Vector;\n\n}));\n","/**\n * Anchor\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./canvas-renderer'), require('./svg-renderer') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory( Zdog, Zdog.Vector, Zdog.CanvasRenderer,\n        Zdog.SvgRenderer );\n  }\n}( this, function factory( utils, Vector, CanvasRenderer, SvgRenderer ) {\n\nvar TAU = utils.TAU;\nvar onePoint = { x: 1, y: 1, z: 1 };\n\nfunction Anchor( options ) {\n  this.create( options || {} );\n}\n\nAnchor.prototype.create = function( options ) {\n  this.children = [];\n  // set defaults & options\n  utils.extend( this, this.constructor.defaults );\n  this.setOptions( options );\n\n  // transform\n  this.translate = new Vector( options.translate );\n  this.rotate = new Vector( options.rotate );\n  this.scale = new Vector( onePoint ).multiply( this.scale );\n  // origin\n  this.origin = new Vector();\n  this.renderOrigin = new Vector();\n\n  if ( this.addTo ) {\n    this.addTo.addChild( this );\n  }\n};\n\nAnchor.defaults = {};\n\nAnchor.optionKeys = Object.keys( Anchor.defaults ).concat([\n  'rotate',\n  'translate',\n  'scale',\n  'addTo',\n]);\n\nAnchor.prototype.setOptions = function( options ) {\n  var optionKeys = this.constructor.optionKeys;\n\n  for ( var key in options ) {\n    if ( optionKeys.indexOf( key ) != -1 ) {\n      this[ key ] = options[ key ];\n    }\n  }\n};\n\nAnchor.prototype.addChild = function( shape ) {\n  if ( this.children.indexOf( shape ) != -1 ) {\n    return;\n  }\n  shape.remove(); // remove previous parent\n  shape.addTo = this; // keep parent reference\n  this.children.push( shape );\n};\n\nAnchor.prototype.removeChild = function( shape ) {\n  var index = this.children.indexOf( shape );\n  if ( index != -1 ) {\n    this.children.splice( index, 1 );\n  }\n};\n\nAnchor.prototype.remove = function() {\n  if ( this.addTo ) {\n    this.addTo.removeChild( this );\n  }\n};\n\n// ----- update ----- //\n\nAnchor.prototype.update = function() {\n  // update self\n  this.reset();\n  // update children\n  this.children.forEach( function( child ) {\n    child.update();\n  });\n  this.transform( this.translate, this.rotate, this.scale );\n};\n\nAnchor.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n};\n\nAnchor.prototype.transform = function( translation, rotation, scale ) {\n  this.renderOrigin.transform( translation, rotation, scale );\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nAnchor.prototype.updateGraph = function() {\n  this.update();\n  this.updateFlatGraph();\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n  });\n  // z-sort\n  this.flatGraph.sort( Anchor.shapeSorter );\n};\n\nAnchor.shapeSorter = function( a, b ) {\n  return a.sortValue - b.sortValue;\n};\n\n// custom getter to check for flatGraph before using it\nObject.defineProperty( Anchor.prototype, 'flatGraph', {\n  get: function() {\n    if ( !this._flatGraph ) {\n      this.updateFlatGraph();\n    }\n    return this._flatGraph;\n  },\n  set: function( graph ) {\n    this._flatGraph = graph;\n  },\n});\n\nAnchor.prototype.updateFlatGraph = function() {\n  this.flatGraph = this.getFlatGraph();\n};\n\n// return Array of self & all child graph items\nAnchor.prototype.getFlatGraph = function() {\n  var flatGraph = [ this ];\n  return this.addChildFlatGraph( flatGraph );\n};\n\nAnchor.prototype.addChildFlatGraph = function( flatGraph ) {\n  this.children.forEach( function( child ) {\n    var childFlatGraph = child.getFlatGraph();\n    Array.prototype.push.apply( flatGraph, childFlatGraph );\n  });\n  return flatGraph;\n};\n\nAnchor.prototype.updateSortValue = function() {\n  this.sortValue = this.renderOrigin.z;\n};\n\n// ----- render ----- //\n\nAnchor.prototype.render = function() {};\n\n// TODO refactor out CanvasRenderer so its not a dependency within anchor.js\nAnchor.prototype.renderGraphCanvas = function( ctx ) {\n  if ( !ctx ) {\n    throw new Error( 'ctx is ' + ctx + '. ' +\n      'Canvas context required for render. Check .renderGraphCanvas( ctx ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, CanvasRenderer );\n  });\n};\n\nAnchor.prototype.renderGraphSvg = function( svg ) {\n  if ( !svg ) {\n    throw new Error( 'svg is ' + svg + '. ' +\n      'SVG required for render. Check .renderGraphSvg( svg ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( svg, SvgRenderer );\n  });\n};\n\n// ----- misc ----- //\n\nAnchor.prototype.copy = function( options ) {\n  // copy options\n  var itemOptions = {};\n  var optionKeys = this.constructor.optionKeys;\n  optionKeys.forEach( function( key ) {\n    itemOptions[ key ] = this[ key ];\n  }, this );\n  // add set options\n  utils.extend( itemOptions, options );\n  var ItemClass = this.constructor;\n  return new ItemClass( itemOptions );\n};\n\nAnchor.prototype.copyGraph = function( options ) {\n  var clone = this.copy( options );\n  this.children.forEach( function( child ) {\n    child.copyGraph({\n      addTo: clone,\n    });\n  });\n  return clone;\n};\n\nAnchor.prototype.normalizeRotate = function() {\n  this.rotate.x = utils.modulo( this.rotate.x, TAU );\n  this.rotate.y = utils.modulo( this.rotate.y, TAU );\n  this.rotate.z = utils.modulo( this.rotate.z, TAU );\n};\n\n// ----- subclass ----- //\n\nfunction getSubclass( Super ) {\n  return function( defaults ) {\n    // create constructor\n    function Item( options ) {\n      this.create( options || {} );\n    }\n\n    Item.prototype = Object.create( Super.prototype );\n    Item.prototype.constructor = Item;\n\n    Item.defaults = utils.extend( {}, Super.defaults );\n    utils.extend( Item.defaults, defaults );\n    // create optionKeys\n    Item.optionKeys = Super.optionKeys.slice(0);\n    // add defaults keys to optionKeys, dedupe\n    Object.keys( Item.defaults ).forEach( function( key ) {\n      if ( !Item.optionKeys.indexOf( key ) != 1 ) {\n        Item.optionKeys.push( key );\n      }\n    });\n\n    Item.subclass = getSubclass( Item );\n\n    return Item;\n  };\n}\n\nAnchor.subclass = getSubclass( Anchor );\n\nreturn Anchor;\n\n}));\n","/**\n * Dragger\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( root );\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory( root );\n  }\n}( this, function factory( window ) {\n\n// quick & dirty drag event stuff\n// messes up if multiple pointers/touches\n\n// event support, default to mouse events\nvar downEvent = 'mousedown';\nvar moveEvent = 'mousemove';\nvar upEvent = 'mouseup';\nif ( window.PointerEvent ) {\n  // PointerEvent, Chrome\n  downEvent = 'pointerdown';\n  moveEvent = 'pointermove';\n  upEvent = 'pointerup';\n} else if ( 'ontouchstart' in window ) {\n  // Touch Events, iOS Safari\n  downEvent = 'touchstart';\n  moveEvent = 'touchmove';\n  upEvent = 'touchend';\n}\n\nfunction noop() {}\n\nfunction Dragger( options ) {\n  this.create( options || {} );\n}\n\nDragger.prototype.create = function( options ) {\n  this.onDragStart = options.onDragStart || noop;\n  this.onDragMove = options.onDragMove || noop;\n  this.onDragEnd = options.onDragEnd || noop;\n\n  this.bindDrag( options.startElement );\n};\n\nDragger.prototype.bindDrag = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    return;\n  }\n  // disable browser gestures #53\n  element.style.touchAction = 'none';\n  element.addEventListener( downEvent, this );\n};\n\nDragger.prototype.getQueryElement = function( element ) {\n  if ( typeof element == 'string' ) {\n    // with string, query selector\n    element = document.querySelector( element );\n  }\n  return element;\n};\n\nDragger.prototype.handleEvent = function( event ) {\n  var method = this[ 'on' + event.type ];\n  if ( method ) {\n    method.call( this, event );\n  }\n};\n\nDragger.prototype.onmousedown =\nDragger.prototype.onpointerdown = function( event ) {\n  this.dragStart( event, event );\n};\n\nDragger.prototype.ontouchstart = function( event ) {\n  this.dragStart( event, event.changedTouches[0] );\n};\n\nDragger.prototype.dragStart = function( event, pointer ) {\n  event.preventDefault();\n  this.dragStartX = pointer.pageX;\n  this.dragStartY = pointer.pageY;\n  window.addEventListener( moveEvent, this );\n  window.addEventListener( upEvent, this );\n  this.onDragStart( pointer );\n};\n\nDragger.prototype.ontouchmove = function( event ) {\n  // HACK, moved touch may not be first\n  this.dragMove( event, event.changedTouches[0] );\n};\n\nDragger.prototype.onmousemove =\nDragger.prototype.onpointermove = function( event ) {\n  this.dragMove( event, event );\n};\n\nDragger.prototype.dragMove = function( event, pointer ) {\n  event.preventDefault();\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  this.onDragMove( pointer, moveX, moveY );\n};\n\nDragger.prototype.onmouseup =\nDragger.prototype.onpointerup =\nDragger.prototype.ontouchend =\nDragger.prototype.dragEnd = function(/* event */) {\n  window.removeEventListener( moveEvent, this );\n  window.removeEventListener( upEvent, this );\n  this.onDragEnd();\n};\n\nreturn Dragger;\n\n}));\n","/**\n * Illustration\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./dragger') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory( Zdog, Zdog.Anchor, Zdog.Dragger );\n  }\n}( this, function factory( utils, Anchor, Dragger ) {\n\nfunction noop() {}\nvar TAU = utils.TAU;\n\nvar Illustration = Anchor.subclass({\n  element: undefined,\n  centered: true,\n  zoom: 1,\n  dragRotate: false,\n  resize: false,\n  onPrerender: noop,\n  onDragStart: noop,\n  onDragMove: noop,\n  onDragEnd: noop,\n  onResize: noop,\n});\n\nutils.extend( Illustration.prototype, Dragger.prototype );\n\nIllustration.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  Dragger.prototype.create.call( this, options );\n  this.setElement( this.element );\n  this.setDragRotate( this.dragRotate );\n  this.setResize( this.resize );\n};\n\nIllustration.prototype.setElement = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    throw new Error( 'Zdog.Illustration element required. Set to ' + element );\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  if ( nodeName == 'canvas' ) {\n    this.setCanvas( element );\n  } else if ( nodeName == 'svg' ) {\n    this.setSvg( element );\n  }\n};\n\nIllustration.prototype.setSize = function( width, height ) {\n  width = Math.round( width );\n  height = Math.round( height );\n  if ( this.isCanvas ) {\n    this.setSizeCanvas( width, height );\n  } else if ( this.isSvg ) {\n    this.setSizeSvg( width, height );\n  }\n};\n\nIllustration.prototype.setResize = function( resize ) {\n  this.resize = resize;\n  // create resize event listener\n  if ( !this.resizeListener ) {\n    this.resizeListener = this.onWindowResize.bind( this );\n  }\n  // add/remove event listener\n  if ( resize ) {\n    window.addEventListener( 'resize', this.resizeListener );\n    this.onWindowResize();\n  } else {\n    window.removeEventListener( 'resize', this.resizeListener );\n  }\n};\n\n// TODO debounce this?\nIllustration.prototype.onWindowResize = function() {\n  this.setMeasuredSize();\n  this.onResize( this.width, this.height );\n};\n\nIllustration.prototype.setMeasuredSize = function() {\n  var width, height;\n  var isFullscreen = this.resize == 'fullscreen';\n  if ( isFullscreen ) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n  } else {\n    var rect = this.element.getBoundingClientRect();\n    width = rect.width;\n    height = rect.height;\n  }\n  this.setSize( width, height );\n};\n\n// ----- render ----- //\n\nIllustration.prototype.renderGraph = function( item ) {\n  if ( this.isCanvas ) {\n    this.renderGraphCanvas( item );\n  } else if ( this.isSvg ) {\n    this.renderGraphSvg( item );\n  }\n};\n\n// combo method\nIllustration.prototype.updateRenderGraph = function( item ) {\n  this.updateGraph();\n  this.renderGraph( item );\n};\n\n// ----- canvas ----- //\n\nIllustration.prototype.setCanvas = function( element ) {\n  this.element = element;\n  this.isCanvas = true;\n  // update related properties\n  this.ctx = this.element.getContext('2d');\n  // set initial size\n  this.setSizeCanvas( element.width, element.height );\n};\n\nIllustration.prototype.setSizeCanvas = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  // up-rez for hi-DPI devices\n  var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n  this.element.width = this.canvasWidth = width * pixelRatio;\n  this.element.height = this.canvasHeight = height * pixelRatio;\n  var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n  if ( needsHighPixelRatioSizing ) {\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n  }\n};\n\nIllustration.prototype.renderGraphCanvas = function( item ) {\n  item = item || this;\n  this.prerenderCanvas();\n  Anchor.prototype.renderGraphCanvas.call( item, this.ctx );\n  this.postrenderCanvas();\n};\n\nIllustration.prototype.prerenderCanvas = function() {\n  var ctx = this.ctx;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  ctx.clearRect( 0, 0, this.canvasWidth, this.canvasHeight );\n  ctx.save();\n  if ( this.centered ) {\n    var centerX = this.width/2 * this.pixelRatio;\n    var centerY = this.height/2 * this.pixelRatio;\n    ctx.translate( centerX, centerY );\n  }\n  var scale = this.pixelRatio * this.zoom;\n  ctx.scale( scale, scale );\n  this.onPrerender( ctx );\n};\n\nIllustration.prototype.postrenderCanvas = function() {\n  this.ctx.restore();\n};\n\n// ----- svg ----- //\n\nIllustration.prototype.setSvg = function( element ) {\n  this.element = element;\n  this.isSvg = true;\n  this.pixelRatio = 1;\n  // set initial size from width & height attributes\n  var width = element.getAttribute('width');\n  var height = element.getAttribute('height');\n  this.setSizeSvg( width, height );\n};\n\nIllustration.prototype.setSizeSvg = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  var viewWidth = width / this.zoom;\n  var viewHeight = height / this.zoom;\n  var viewX = this.centered ? -viewWidth/2 : 0;\n  var viewY = this.centered ? -viewHeight/2 : 0;\n  this.element.setAttribute( 'viewBox', viewX + ' ' + viewY + ' ' +\n    viewWidth + ' ' + viewHeight );\n  if ( this.resize ) {\n    // remove size attributes, let size be determined by viewbox\n    this.element.removeAttribute('width');\n    this.element.removeAttribute('height');\n  } else {\n    this.element.setAttribute( 'width', width );\n    this.element.setAttribute( 'height', height );\n  }\n};\n\nIllustration.prototype.renderGraphSvg = function( item ) {\n  item = item || this;\n  empty( this.element );\n  this.onPrerender( this.element );\n  Anchor.prototype.renderGraphSvg.call( item, this.element );\n};\n\nfunction empty( element ) {\n  while ( element.firstChild ) {\n    element.removeChild( element.firstChild );\n  }\n}\n\n// ----- drag ----- //\n\nIllustration.prototype.setDragRotate = function( item ) {\n  if ( !item ) {\n    return;\n  } else if ( item === true ) {\n    /* eslint consistent-this: \"off\" */\n    item = this;\n  }\n  this.dragRotate = item;\n\n  this.bindDrag( this.element );\n};\n\nIllustration.prototype.dragStart = function(/* event, pointer */) {\n  this.dragStartRX = this.dragRotate.rotate.x;\n  this.dragStartRY = this.dragRotate.rotate.y;\n  Dragger.prototype.dragStart.apply( this, arguments );\n};\n\nIllustration.prototype.dragMove = function( event, pointer ) {\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  var displaySize = Math.min( this.width, this.height );\n  var moveRY = moveX / displaySize * TAU;\n  var moveRX = moveY / displaySize * TAU;\n  this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n  this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n  Dragger.prototype.dragMove.apply( this, arguments );\n};\n\nreturn Illustration;\n\n}));\n","/**\n * PathCommand\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./vector') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory( Zdog.Vector );\n  }\n}( this, function factory( Vector ) {\n\nfunction PathCommand( method, points, previousPoint ) {\n  this.method = method;\n  this.points = points.map( mapVectorPoint );\n  this.renderPoints = points.map( mapNewVector );\n  this.previousPoint = previousPoint;\n  this.endRenderPoint = this.renderPoints[ this.renderPoints.length - 1 ];\n  // arc actions come with previous point & corner point\n  // but require bezier control points\n  if ( method == 'arc' ) {\n    this.controlPoints = [ new Vector(), new Vector() ];\n  }\n}\n\nfunction mapVectorPoint( point ) {\n  if ( point instanceof Vector ) {\n    return point;\n  } else {\n    return new Vector( point );\n  }\n}\n\nfunction mapNewVector( point ) {\n  return new Vector( point );\n}\n\nPathCommand.prototype.reset = function() {\n  // reset renderPoints back to orignal points position\n  var points = this.points;\n  this.renderPoints.forEach( function( renderPoint, i ) {\n    var point = points[i];\n    renderPoint.set( point );\n  });\n};\n\nPathCommand.prototype.transform = function( translation, rotation, scale ) {\n  this.renderPoints.forEach( function( renderPoint ) {\n    renderPoint.transform( translation, rotation, scale );\n  });\n};\n\nPathCommand.prototype.render = function( ctx, elem, renderer ) {\n  return this[ this.method ]( ctx, elem, renderer );\n};\n\nPathCommand.prototype.move = function( ctx, elem, renderer ) {\n  return renderer.move( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.line = function( ctx, elem, renderer ) {\n  return renderer.line( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.bezier = function( ctx, elem, renderer ) {\n  var cp0 = this.renderPoints[0];\n  var cp1 = this.renderPoints[1];\n  var end = this.renderPoints[2];\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nvar arcHandleLength = 9/16;\n\nPathCommand.prototype.arc = function( ctx, elem, renderer ) {\n  var prev = this.previousPoint;\n  var corner = this.renderPoints[0];\n  var end = this.renderPoints[1];\n  var cp0 = this.controlPoints[0];\n  var cp1 = this.controlPoints[1];\n  cp0.set( prev ).lerp( corner, arcHandleLength );\n  cp1.set( end ).lerp( corner, arcHandleLength );\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nreturn PathCommand;\n\n}));\n","/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory( Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor ) {\n\nvar Shape = Anchor.subclass({\n  stroke: 1,\n  fill: false,\n  color: '#333',\n  closed: true,\n  visible: true,\n  path: [ {} ],\n  front: { z: 1 },\n  backface: true,\n});\n\nShape.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // front\n  this.front = new Vector( options.front || this.front );\n  this.renderFront = new Vector( this.front );\n  this.renderNormal = new Vector();\n};\n\nvar actionNames = [\n  'move',\n  'line',\n  'bezier',\n  'arc',\n];\n\nShape.prototype.updatePath = function() {\n  this.setPath();\n  this.updatePathCommands();\n};\n\n// place holder for Ellipse, Rect, etc.\nShape.prototype.setPath = function() {};\n\n// parse path into PathCommands\nShape.prototype.updatePathCommands = function() {\n  var previousPoint;\n  this.pathCommands = this.path.map( function( pathPart, i ) {\n    // pathPart can be just vector coordinates -> { x, y, z }\n    // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n    var keys = Object.keys( pathPart );\n    var method = keys[0];\n    var points = pathPart[ method ];\n    // default to line if no instruction\n    var isInstruction = keys.length == 1 && actionNames.indexOf( method ) != -1;\n    if ( !isInstruction ) {\n      method = 'line';\n      points = pathPart;\n    }\n    // munge single-point methods like line & move without arrays\n    var isLineOrMove = method == 'line' || method == 'move';\n    var isPointsArray = Array.isArray( points );\n    if ( isLineOrMove && !isPointsArray ) {\n      points = [ points ];\n    }\n\n    // first action is always move\n    method = i === 0 ? 'move' : method;\n    // arcs require previous last point\n    var command = new PathCommand( method, points, previousPoint );\n    // update previousLastPoint\n    previousPoint = command.endRenderPoint;\n    return command;\n  });\n};\n\n// ----- update ----- //\n\nShape.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n  this.renderFront.set( this.front );\n  // reset command render points\n  this.pathCommands.forEach( function( command ) {\n    command.reset();\n  });\n};\n\nShape.prototype.transform = function( translation, rotation, scale ) {\n  // calculate render points backface visibility & cone/hemisphere shapes\n  this.renderOrigin.transform( translation, rotation, scale );\n  this.renderFront.transform( translation, rotation, scale );\n  this.renderNormal.set( this.renderOrigin ).subtract( this.renderFront );\n  // transform points\n  this.pathCommands.forEach( function( command ) {\n    command.transform( translation, rotation, scale );\n  });\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nShape.prototype.updateSortValue = function() {\n  // sort by average z of all points\n  // def not geometrically correct, but works for me\n  var pointCount = this.pathCommands.length;\n  var firstPoint = this.pathCommands[0].endRenderPoint;\n  var lastPoint = this.pathCommands[ pointCount - 1 ].endRenderPoint;\n  // ignore the final point if self closing shape\n  var isSelfClosing = pointCount > 2 && firstPoint.isSame( lastPoint );\n  if ( isSelfClosing ) {\n    pointCount -= 1;\n  }\n\n  var sortValueTotal = 0;\n  for ( var i = 0; i < pointCount; i++ ) {\n    sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n  }\n  this.sortValue = sortValueTotal / pointCount;\n};\n\n// ----- render ----- //\n\nShape.prototype.render = function( ctx, renderer ) {\n  var length = this.pathCommands.length;\n  if ( !this.visible || !length ) {\n    return;\n  }\n  // do not render if hiding backface\n  this.isFacingBack = this.renderNormal.z > 0;\n  if ( !this.backface && this.isFacingBack ) {\n    return;\n  }\n  if ( !renderer ) {\n    throw new Error( 'Zdog renderer required. Set to ' + renderer );\n  }\n  // render dot or path\n  var isDot = length == 1;\n  if ( renderer.isCanvas && isDot ) {\n    this.renderCanvasDot( ctx, renderer );\n  } else {\n    this.renderPath( ctx, renderer );\n  }\n};\n\nvar TAU = utils.TAU;\n// Safari does not render lines with no size, have to render circle instead\nShape.prototype.renderCanvasDot = function( ctx ) {\n  var lineWidth = this.getLineWidth();\n  if ( !lineWidth ) {\n    return;\n  }\n  ctx.fillStyle = this.getRenderColor();\n  var point = this.pathCommands[0].endRenderPoint;\n  ctx.beginPath();\n  var radius = lineWidth/2;\n  ctx.arc( point.x, point.y, radius, 0, TAU );\n  ctx.fill();\n};\n\nShape.prototype.getLineWidth = function() {\n  if ( !this.stroke ) {\n    return 0;\n  }\n  if ( this.stroke == true ) {\n    return 1;\n  }\n  return this.stroke;\n};\n\nShape.prototype.getRenderColor = function() {\n  // use backface color if applicable\n  var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n  var color = isBackfaceColor ? this.backface : this.color;\n  return color;\n};\n\nShape.prototype.renderPath = function( ctx, renderer ) {\n  var elem = this.getRenderElement( ctx, renderer );\n  var isTwoPoints = this.pathCommands.length == 2 &&\n    this.pathCommands[1].method == 'line';\n  var isClosed = !isTwoPoints && this.closed;\n  var color = this.getRenderColor();\n\n  renderer.renderPath( ctx, elem, this.pathCommands, isClosed );\n  renderer.stroke( ctx, elem, this.stroke, color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nShape.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n    this.svgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.svgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.svgElement;\n};\n\nreturn Shape;\n\n}));\n","/**\n * Group\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory( Zdog.Anchor );\n  }\n}( this, function factory( Anchor ) {\n\nvar Group = Anchor.subclass({\n  updateSort: false,\n  visible: true,\n});\n\n// ----- update ----- //\n\nGroup.prototype.updateSortValue = function() {\n  var sortValueTotal = 0;\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n    sortValueTotal += item.sortValue;\n  });\n  // average sort value of all points\n  // def not geometrically correct, but works for me\n  this.sortValue = sortValueTotal / this.flatGraph.length;\n\n  if ( this.updateSort ) {\n    this.flatGraph.sort( Anchor.shapeSorter );\n  }\n};\n\n// ----- render ----- //\n\nGroup.prototype.render = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, renderer );\n  });\n};\n\n// actual group flatGraph only used inside group\nGroup.prototype.updateFlatGraph = function() {\n  // do not include self\n  var flatGraph = [];\n  this.flatGraph = this.addChildFlatGraph( flatGraph );\n};\n\n// do not include children, group handles rendering & sorting internally\nGroup.prototype.getFlatGraph = function() {\n  return [ this ];\n};\n\nreturn Group;\n\n}));\n","/**\n * Rect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar Rect = Shape.subclass({\n  width: 1,\n  height: 1,\n});\n\nRect.prototype.setPath = function() {\n  var x = this.width / 2;\n  var y = this.height / 2;\n  /* eslint key-spacing: \"off\" */\n  this.path = [\n    { x: -x, y: -y },\n    { x:  x, y: -y },\n    { x:  x, y:  y },\n    { x: -x, y:  y },\n  ];\n};\n\nreturn Rect;\n\n}));\n","/**\n * RoundedRect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar RoundedRect = Shape.subclass({\n  width: 1,\n  height: 1,\n  cornerRadius: 0.25,\n  closed: false,\n});\n\nRoundedRect.prototype.setPath = function() {\n  /* eslint\n     id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n     key-spacing: \"off\" */\n  var xA = this.width / 2;\n  var yA = this.height / 2;\n  var shortSide = Math.min( xA, yA );\n  var cornerRadius = Math.min( this.cornerRadius, shortSide );\n  var xB = xA - cornerRadius;\n  var yB = yA - cornerRadius;\n  var path = [\n    // top right corner\n    { x: xB, y: -yA },\n    { arc: [\n      { x: xA, y: -yA },\n      { x: xA, y: -yB },\n    ]},\n  ];\n  // bottom right corner\n  if ( yB ) {\n    path.push({ x: xA, y: yB });\n  }\n  path.push({ arc: [\n    { x: xA, y:  yA },\n    { x: xB, y:  yA },\n  ]});\n  // bottom left corner\n  if ( xB ) {\n    path.push({ x: -xB, y: yA });\n  }\n  path.push({ arc: [\n    { x: -xA, y:  yA },\n    { x: -xA, y:  yB },\n  ]});\n  // top left corner\n  if ( yB ) {\n    path.push({ x: -xA, y: -yB });\n  }\n  path.push({ arc: [\n    { x: -xA, y: -yA },\n    { x: -xB, y: -yA },\n  ]});\n\n  // back to top right corner\n  if ( xB ) {\n    path.push({ x: xB, y: -yA });\n  }\n\n  this.path = path;\n};\n\nreturn RoundedRect;\n\n}));\n","/**\n * Ellipse\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory( Zdog.Shape );\n  }\n\n}( this, function factory( Shape ) {\n\nvar Ellipse = Shape.subclass({\n  diameter: 1,\n  width: undefined,\n  height: undefined,\n  quarters: 4,\n  closed: false,\n});\n\nEllipse.prototype.setPath = function() {\n  var width = this.width != undefined ? this.width : this.diameter;\n  var height = this.height != undefined ? this.height : this.diameter;\n  var x = width / 2;\n  var y = height / 2;\n  this.path = [\n    { x: 0, y: -y },\n    { arc: [ // top right\n      { x: x, y: -y },\n      { x: x, y: 0 },\n    ]},\n  ];\n  // bottom right\n  if ( this.quarters > 1 ) {\n    this.path.push({ arc: [\n      { x: x, y: y },\n      { x: 0, y: y },\n    ]});\n  }\n  // bottom left\n  if ( this.quarters > 2 ) {\n    this.path.push({ arc: [\n      { x: -x, y: y },\n      { x: -x, y: 0 },\n    ]});\n  }\n  // top left\n  if ( this.quarters > 3 ) {\n    this.path.push({ arc: [\n      { x: -x, y: -y },\n      { x: 0, y: -y },\n    ]});\n  }\n};\n\nreturn Ellipse;\n\n}));\n","/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory( Zdog, Zdog.Shape );\n  }\n}( this, function factory( utils, Shape ) {\n\nvar Polygon = Shape.subclass({\n  sides: 3,\n  radius: 0.5,\n});\n\nvar TAU = utils.TAU;\n\nPolygon.prototype.setPath = function() {\n  this.path = [];\n  for ( var i=0; i < this.sides; i++ ) {\n    var theta = i/this.sides * TAU - TAU/4;\n    var x = Math.cos( theta ) * this.radius;\n    var y = Math.sin( theta ) * this.radius;\n    this.path.push({ x: x, y: y });\n  }\n};\n\nreturn Polygon;\n\n}));\n","/**\n * Hemisphere composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory( Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, Anchor, Ellipse ) {\n\nvar Hemisphere = Ellipse.subclass({\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nHemisphere.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.diameter/2 },\n  });\n  // vector used for calculation\n  this.renderCentroid = new Vector();\n};\n\nHemisphere.prototype.updateSortValue = function() {\n  // centroid of hemisphere is 3/8 between origin and apex\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 3/8 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nHemisphere.prototype.render = function( ctx, renderer ) {\n  this.renderDome( ctx, renderer );\n  // call super\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nHemisphere.prototype.renderDome = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  var elem = this.getDomeRenderElement( ctx, renderer );\n  var contourAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x );\n  var domeRadius = this.diameter/2 * this.renderNormal.magnitude();\n  var x = this.renderOrigin.x;\n  var y = this.renderOrigin.y;\n\n  if ( renderer.isCanvas ) {\n    // canvas\n    var startAngle = contourAngle + TAU/4;\n    var endAngle = contourAngle - TAU/4;\n    ctx.beginPath();\n    ctx.arc( x, y, domeRadius, startAngle, endAngle );\n  } else if ( renderer.isSvg ) {\n    // svg\n    contourAngle = (contourAngle - TAU/4) / TAU * 360;\n    this.domeSvgElement.setAttribute( 'd', 'M ' + -domeRadius + ',0 A ' +\n        domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0' );\n    this.domeSvgElement.setAttribute( 'transform',\n        'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')' );\n  }\n\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nHemisphere.prototype.getDomeRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.domeSvgElement ) {\n    // create svgElement\n    this.domeSvgElement = document.createElementNS( svgURI, 'path');\n    this.domeSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.domeSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.domeSvgElement;\n};\n\nreturn Hemisphere;\n\n}));\n","/**\n * Cylinder composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'),\n        require('./path-command'), require('./shape'), require('./group'),\n        require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory( Zdog, Zdog.PathCommand, Zdog.Shape,\n        Zdog.Group, Zdog.Ellipse );\n  }\n}( this, function factory( utils, PathCommand, Shape, Group, Ellipse ) {\n\nfunction noop() {}\n\n// ----- CylinderGroup ----- //\n\nvar CylinderGroup = Group.subclass({\n  color: '#333',\n  updateSort: true,\n});\n\nCylinderGroup.prototype.create = function() {\n  Group.prototype.create.apply( this, arguments );\n  this.pathCommands = [\n    new PathCommand( 'move', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCylinderGroup.prototype.render = function( ctx, renderer ) {\n  this.renderCylinderSurface( ctx, renderer );\n  Group.prototype.render.apply( this, arguments );\n};\n\nCylinderGroup.prototype.renderCylinderSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  // render cylinder surface\n  var elem = this.getRenderElement( ctx, renderer );\n  var frontBase = this.frontBase;\n  var rearBase = this.rearBase;\n  var scale = frontBase.renderNormal.magnitude();\n  var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth();\n  // set path command render points\n  this.pathCommands[0].renderPoints[0].set( frontBase.renderOrigin );\n  this.pathCommands[1].renderPoints[0].set( rearBase.renderOrigin );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'butt'; // nice\n  }\n  renderer.renderPath( ctx, elem, this.pathCommands );\n  renderer.stroke( ctx, elem, true, this.color, strokeWidth );\n  renderer.end( ctx, elem );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'round'; // reset\n  }\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCylinderGroup.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n  }\n  return this.svgElement;\n};\n\n// prevent double-creation in parent.copyGraph()\n// only create in Cylinder.create()\nCylinderGroup.prototype.copyGraph = noop;\n\n// ----- CylinderEllipse ----- //\n\nvar CylinderEllipse = Ellipse.subclass();\n\nCylinderEllipse.prototype.copyGraph = noop;\n\n// ----- Cylinder ----- //\n\nvar Cylinder = Shape.subclass({\n  diameter: 1,\n  length: 1,\n  frontFace: undefined,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCylinder.prototype.create = function(/* options */) {\n  // call super\n  Shape.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  // CylinderGroup to render cylinder surface then bases\n  this.group = new CylinderGroup({\n    addTo: this,\n    color: this.color,\n    visible: this.visible,\n  });\n  var baseZ = this.length/2;\n  var baseColor = this.backface || true;\n  // front outside base\n  this.frontBase = this.group.frontBase = new Ellipse({\n    addTo: this.group,\n    diameter: this.diameter,\n    translate: { z: baseZ },\n    rotate: { y: TAU/2 },\n    color: this.color,\n    stroke: this.stroke,\n    fill: this.fill,\n    backface: this.frontFace || baseColor,\n    visible: this.visible,\n  });\n  // back outside base\n  this.rearBase = this.group.rearBase = this.frontBase.copy({\n    translate: { z: -baseZ },\n    rotate: { y: 0 },\n    backface: baseColor,\n  });\n};\n\n// Cylinder shape does not render anything\nCylinder.prototype.render = function() {};\n\n// ----- set child properties ----- //\n\nvar childProperties = [ 'stroke', 'fill', 'color', 'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Cylinder.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      // set property on children\n      if ( this.frontBase ) {\n        this.frontBase[ property ] = value;\n        this.rearBase[ property ] = value;\n        this.group[ property ] = value;\n      }\n    },\n  });\n});\n\n// TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\nreturn Cylinder;\n\n}));\n","/**\n * Cone composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory( Zdog, Zdog.Vector, Zdog.PathCommand,\n        Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor, Ellipse ) {\n\nvar Cone = Ellipse.subclass({\n  length: 1,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCone.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.length },\n  });\n\n  // vectors used for calculation\n  this.renderApex = new Vector();\n  this.renderCentroid = new Vector();\n  this.tangentA = new Vector();\n  this.tangentB = new Vector();\n\n  this.surfacePathCommands = [\n    new PathCommand( 'move', [ {} ] ), // points set in renderConeSurface\n    new PathCommand( 'line', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCone.prototype.updateSortValue = function() {\n  // center of cone is one third of its length\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 1/3 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nCone.prototype.render = function( ctx, renderer ) {\n  this.renderConeSurface( ctx, renderer );\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nCone.prototype.renderConeSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  this.renderApex.set( this.apex.renderOrigin )\n    .subtract( this.renderOrigin );\n\n  var scale = this.renderNormal.magnitude();\n  var apexDistance = this.renderApex.magnitude2d();\n  var normalDistance = this.renderNormal.magnitude2d();\n  // eccentricity\n  var eccenAngle = Math.acos( normalDistance / scale );\n  var eccen = Math.sin( eccenAngle );\n  var radius = this.diameter/2 * scale;\n  // does apex extend beyond eclipse of face\n  var isApexVisible = radius * eccen < apexDistance;\n  if ( !isApexVisible ) {\n    return;\n  }\n  // update tangents\n  var apexAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x ) +\n      TAU/2;\n  var projectLength = apexDistance / eccen;\n  var projectAngle = Math.acos( radius / projectLength );\n  // set tangent points\n  var tangentA = this.tangentA;\n  var tangentB = this.tangentB;\n\n  tangentA.x = Math.cos( projectAngle ) * radius * eccen;\n  tangentA.y = Math.sin( projectAngle ) * radius;\n\n  tangentB.set( this.tangentA );\n  tangentB.y *= -1;\n\n  tangentA.rotateZ( apexAngle );\n  tangentB.rotateZ( apexAngle );\n  tangentA.add( this.renderOrigin );\n  tangentB.add( this.renderOrigin );\n\n  this.setSurfaceRenderPoint( 0, tangentA );\n  this.setSurfaceRenderPoint( 1, this.apex.renderOrigin );\n  this.setSurfaceRenderPoint( 2, tangentB );\n\n  // render\n  var elem = this.getSurfaceRenderElement( ctx, renderer );\n  renderer.renderPath( ctx, elem, this.surfacePathCommands );\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCone.prototype.getSurfaceRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.surfaceSvgElement ) {\n    // create svgElement\n    this.surfaceSvgElement = document.createElementNS( svgURI, 'path');\n    this.surfaceSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.surfaceSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.surfaceSvgElement;\n};\n\nCone.prototype.setSurfaceRenderPoint = function( index, point ) {\n  var renderPoint = this.surfacePathCommands[ index ].renderPoints[0];\n  renderPoint.set( point );\n};\n\nreturn Cone;\n\n}));\n","/**\n * Box composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./shape'), require('./rect') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory( Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect );\n  }\n}( this, function factory( utils, Anchor, Shape, Rect ) {\n\n// ----- BoxRect ----- //\n\nvar BoxRect = Rect.subclass();\n// prevent double-creation in parent.copyGraph()\n// only create in Box.create()\nBoxRect.prototype.copyGraph = function() {};\n\n// ----- Box ----- //\n\nvar TAU = utils.TAU;\nvar faceNames = [\n  'frontFace',\n  'rearFace',\n  'leftFace',\n  'rightFace',\n  'topFace',\n  'bottomFace',\n];\n\nvar boxDefaults = utils.extend( {}, Shape.defaults );\ndelete boxDefaults.path;\nfaceNames.forEach( function( faceName ) {\n  boxDefaults[ faceName ] = true;\n});\nutils.extend( boxDefaults, {\n  width: 1,\n  height: 1,\n  depth: 1,\n  fill: true,\n});\n\nvar Box = Anchor.subclass( boxDefaults );\n\nBox.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // HACK reset fill to trigger face setter\n  this.fill = this.fill;\n};\n\nBox.prototype.updatePath = function() {\n  // reset all faces to trigger setters\n  faceNames.forEach( function( faceName ) {\n    this[ faceName ] = this[ faceName ];\n  }, this );\n};\n\nfaceNames.forEach( function( faceName ) {\n  var _faceName = '_' + faceName;\n  Object.defineProperty( Box.prototype, faceName, {\n    get: function() {\n      return this[ _faceName ];\n    },\n    set: function( value ) {\n      this[ _faceName ] = value;\n      this.setFace( faceName, value );\n    },\n  });\n});\n\nBox.prototype.setFace = function( faceName, value ) {\n  var rectProperty = faceName + 'Rect';\n  var rect = this[ rectProperty ];\n  // remove if false\n  if ( !value ) {\n    this.removeChild( rect );\n    return;\n  }\n  // update & add face\n  var options = this.getFaceOptions( faceName );\n  options.color = typeof value == 'string' ? value : this.color;\n\n  if ( rect ) {\n    // update previous\n    rect.setOptions( options );\n  } else {\n    // create new\n    rect = this[ rectProperty ] = new BoxRect( options );\n  }\n  rect.updatePath();\n  this.addChild( rect );\n};\n\nBox.prototype.getFaceOptions = function( faceName ) {\n  return {\n    frontFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: this.depth/2 },\n    },\n    rearFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: -this.depth/2 },\n      rotate: { y: TAU/2 },\n    },\n    leftFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: -this.width/2 },\n      rotate: { y: -TAU/4 },\n    },\n    rightFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: this.width/2 },\n      rotate: { y: TAU/4 },\n    },\n    topFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: -this.height/2 },\n      rotate: { x: -TAU/4 },\n    },\n    bottomFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: this.height/2 },\n      rotate: { x: TAU/4 },\n    },\n  }[ faceName ];\n};\n\n// ----- set face properties ----- //\n\nvar childProperties = [ 'color', 'stroke', 'fill', 'backface', 'front',\n  'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Box.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      faceNames.forEach( function( faceName ) {\n        var rect = this[ faceName + 'Rect' ];\n        var isFaceColor = typeof this[ faceName ] == 'string';\n        var isColorUnderwrite = property == 'color' && isFaceColor;\n        if ( rect && !isColorUnderwrite ) {\n          rect[ property ] = value;\n        }\n      }, this );\n    },\n  });\n});\n\nreturn Box;\n\n}));\n","/**\n * Index\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./boilerplate'),\n        require('./canvas-renderer'),\n        require('./svg-renderer'),\n        require('./vector'),\n        require('./anchor'),\n        require('./dragger'),\n        require('./illustration'),\n        require('./path-command'),\n        require('./shape'),\n        require('./group'),\n        require('./rect'),\n        require('./rounded-rect'),\n        require('./ellipse'),\n        require('./polygon'),\n        require('./hemisphere'),\n        require('./cylinder'),\n        require('./cone'),\n        require('./box')\n    );\n  } else if ( typeof define == 'function' && define.amd ) {\n    /* globals define */ // AMD\n    define( 'zdog', [], root.Zdog );\n  }\n})( this, function factory( Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor,\n    Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect,\n    Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box ) {\n\n      Zdog.CanvasRenderer = CanvasRenderer;\n      Zdog.SvgRenderer = SvgRenderer;\n      Zdog.Vector = Vector;\n      Zdog.Anchor = Anchor;\n      Zdog.Dragger = Dragger;\n      Zdog.Illustration = Illustration;\n      Zdog.PathCommand = PathCommand;\n      Zdog.Shape = Shape;\n      Zdog.Group = Group;\n      Zdog.Rect = Rect;\n      Zdog.RoundedRect = RoundedRect;\n      Zdog.Ellipse = Ellipse;\n      Zdog.Polygon = Polygon;\n      Zdog.Hemisphere = Hemisphere;\n      Zdog.Cylinder = Cylinder;\n      Zdog.Cone = Cone;\n      Zdog.Box = Box;\n\n      return Zdog;\n});\n","import * as Zdog from 'zdog';\n\n// create illo\nlet illo = new Zdog.Illustration({\n\t// set canvas with selector\n\telement: '.zdog-canvas',\n\t// zoom up 2x\n\tzoom: 2\n});\n// circle\nnew Zdog.Ellipse({\n\taddTo: illo,\n\tdiameter: 80,\n\t// position closer\n\ttranslate: { z: 40 },\n\tstroke: 20,\n\tcolor: '#636'\n});\n\n// square\nnew Zdog.Rect({\n\taddTo: illo,\n\twidth: 80,\n\theight: 80,\n\t// position further back\n\ttranslate: { z: -40 },\n\tstroke: 12,\n\tcolor: '#E62',\n\tfill: true\n});\n\n// update & render\nillo.updateRenderGraph();\n\nfunction animate() {\n\t// rotate illo each frame\n\tillo.rotate.y += 0.03;\n\tillo.updateRenderGraph();\n\t// animate next frame\n\trequestAnimationFrame(animate);\n}\n// start animation\nanimate();\n","import Zdog from 'zdog';\n// Made with Zdog\n\n// ----- setup ----- //\n\nvar sceneSize = 80;\nvar isSpinning = true;\nvar TAU = Zdog.TAU;\n// colors\nvar pink = '#F8B';\nvar blush = '#F5A';\nvar black = '#333';\nvar shoe = '#D03';\nvar red = '#E10';\nvar yellow = '#FD0';\n\nvar illo = new Zdog.Illustration({\n\telement: '.kirby-canvas',\n\tdragRotate: true,\n\tzoom: 2,\n\tonDragStart: function() {\n\t\tisSpinning = false;\n\t}\n});\n\n// ----- model ----- //\n\nvar body = new Zdog.Shape({\n\tstroke: 22,\n\ttranslate: { y: 11 },\n\trotate: { x: 0.3, z: 0.1 },\n\taddTo: illo,\n\tcolor: pink\n});\n\nvar face = new Zdog.Anchor({\n\ttranslate: { z: 10.5 },\n\taddTo: body\n});\n\n[-1, 1].forEach(function(xSide) {\n\tvar eyeGroup = new Zdog.Group({\n\t\taddTo: face,\n\t\ttranslate: { x: 2.4 * xSide, y: -2 },\n\t\trotate: { x: -0.1 }\n\t});\n\t// eye\n\tnew Zdog.Ellipse({\n\t\twidth: 1.4,\n\t\theight: 5.5,\n\t\taddTo: eyeGroup,\n\t\tstroke: 1,\n\t\tcolor: black,\n\t\tfill: true\n\t});\n\t// eye highlight\n\tnew Zdog.Ellipse({\n\t\twidth: 1,\n\t\theight: 2,\n\t\taddTo: eyeGroup,\n\t\ttranslate: { y: -1.5, z: 0.5 },\n\t\tstroke: 0.5,\n\t\tcolor: '#FFF',\n\t\tfill: true\n\t});\n\n\t// cheek holder\n\tvar cheekHolder = new Zdog.Anchor({\n\t\taddTo: body,\n\t\trotate: { y: 0.6 * xSide }\n\t});\n\n\tnew Zdog.Ellipse({\n\t\twidth: 2.5,\n\t\theight: 1,\n\t\ttranslate: { y: 1, z: 10.5 },\n\t\taddTo: cheekHolder,\n\t\tcolor: blush,\n\t\tstroke: 1\n\t});\n});\n\n// mouth\nnew Zdog.Shape({\n\tpath: [\n\t\t{ x: 0, y: 0 },\n\t\t{ bezier: [{ x: 1.1, y: 0 }, { x: 1.1, y: 0.2 }, { x: 1.1, y: 0.5 }] },\n\t\t{ bezier: [{ x: 1.1, y: 1.1 }, { x: 0.2, y: 1.8 }, { x: 0, y: 1.8 }] },\n\t\t{\n\t\t\tbezier: [\n\t\t\t\t{ x: -0.2, y: 1.8 },\n\t\t\t\t{ x: -1.1, y: 1.1 },\n\t\t\t\t{ x: -1.1, y: 0.5 }\n\t\t\t]\n\t\t},\n\t\t{ bezier: [{ x: -1.1, y: 0.2 }, { x: -1.1, y: 0 }, { x: 0, y: 0 }] }\n\t],\n\taddTo: face,\n\ttranslate: { y: 2, z: -0.5 },\n\tstroke: 1,\n\tcolor: shoe,\n\tfill: true\n});\n\nvar rightArm = new Zdog.Shape({\n\tpath: [{ y: 0 }, { y: -7 }],\n\taddTo: body,\n\ttranslate: { x: -6, y: -4, z: 0 },\n\tcolor: pink,\n\tstroke: 7\n});\n\n// left arm\nrightArm.copy({\n\tpath: [{ x: 0 }, { x: 6 }],\n\ttranslate: { x: 6, y: -2, z: 0 }\n});\n\n// right foot\nvar rightFoot = new Zdog.Shape({\n\tpath: [\n\t\t{ x: 0, y: -2 },\n\t\t{ arc: [{ x: 2, y: -2 }, { x: 2, y: 0 }] },\n\t\t{ arc: [{ x: 2, y: 5 }, { x: 0, y: 5 }] },\n\t\t{ arc: [{ x: -2, y: 5 }, { x: -2, y: 0 }] },\n\t\t{ arc: [{ x: -2, y: -2 }, { x: 0, y: -2 }] }\n\t],\n\taddTo: body,\n\ttranslate: { x: -1, y: 9, z: -9 },\n\trotate: { z: 0.2 },\n\tstroke: 6,\n\tcolor: shoe,\n\tfill: true,\n\tclosed: false\n});\n\nrightFoot.copy({\n\ttranslate: { x: 9.5, y: 6, z: -6 },\n\trotate: { z: -1.1, y: 0.8 }\n});\n\n// ----- umbrella ----- //\n\n// umbrella rod\nvar umbrella = new Zdog.Shape({\n\tpath: [{ y: 0 }, { y: 22 }],\n\taddTo: rightArm,\n\ttranslate: { y: -33, z: 2 },\n\trotate: { y: 0.5 },\n\tcolor: yellow,\n\tstroke: 1\n});\n\n// star\nvar starPath = (function() {\n\tvar path = [];\n\tvar starRadiusA = 3;\n\tvar starRadiusB = 1.7;\n\tfor (var i = 0; i < 10; i++) {\n\t\tvar radius = i % 2 ? starRadiusA : starRadiusB;\n\t\tvar angle = (TAU * i) / 10 + TAU / 4;\n\t\tvar point = {\n\t\t\tx: Math.cos(angle) * radius,\n\t\t\ty: Math.sin(angle) * radius\n\t\t};\n\t\tpath.push(point);\n\t}\n\treturn path;\n})();\n// star shape\nvar star = new Zdog.Shape({\n\tpath: starPath,\n\taddTo: umbrella,\n\ttranslate: { y: -4.5 },\n\tstroke: 2,\n\tcolor: yellow,\n\tfill: true\n});\n\n// umbrella handle\nnew Zdog.Shape({\n\tpath: [\n\t\t{ z: 0, y: 0 },\n\t\t{ z: 0, y: 1 },\n\t\t{ arc: [{ z: 0, y: 4 }, { z: 3, y: 4 }] },\n\t\t{ arc: [{ z: 6, y: 4 }, { z: 6, y: 1 }] }\n\t],\n\taddTo: umbrella,\n\ttranslate: { y: 23 },\n\tstroke: 2,\n\tcolor: '#37F',\n\tclosed: false\n});\n\n// umbrella shield panels\n(function() {\n\tvar umbPanelX = 14 * Math.sin(TAU / 24);\n\tvar umbPanelZ = 14 * Math.cos(TAU / 24);\n\tfor (var i = 0; i < 12; i++) {\n\t\tvar colorSide = Math.floor(i / 2) % 2;\n\t\tnew Zdog.Shape({\n\t\t\tpath: [\n\t\t\t\t{ x: 0, y: 0, z: 0 },\n\t\t\t\t{\n\t\t\t\t\tarc: [\n\t\t\t\t\t\t{ x: -umbPanelX, y: 0, z: umbPanelZ },\n\t\t\t\t\t\t{ x: -umbPanelX, y: 14, z: umbPanelZ }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ x: umbPanelX, y: 14, z: umbPanelZ },\n\t\t\t\t{\n\t\t\t\t\tarc: [\n\t\t\t\t\t\t{ x: umbPanelX, y: 0, z: umbPanelZ },\n\t\t\t\t\t\t{ x: 0, y: 0, z: 0 }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\taddTo: umbrella,\n\t\t\trotate: { y: (TAU / 12) * i },\n\t\t\tstroke: 1,\n\t\t\tcolor: colorSide ? red : 'white',\n\t\t\tfill: true\n\t\t});\n\t}\n})();\n\n// floater stars\n(function() {\n\tfor (var i = 0; i < 6; i++) {\n\t\tvar starHolder = new Zdog.Anchor({\n\t\t\taddTo: umbrella,\n\t\t\ttranslate: { y: 10 },\n\t\t\trotate: { y: (TAU / 6) * i + TAU / 24 }\n\t\t});\n\t\tstar.copy({\n\t\t\taddTo: starHolder,\n\t\t\ttranslate: { z: 28 }\n\t\t});\n\t}\n})();\n\n// ----- animate ----- //\n\nfunction animate() {\n\tillo.rotate.y += isSpinning ? -0.03 : 0;\n\tillo.updateRenderGraph();\n\trequestAnimationFrame(animate);\n}\n\nanimate();\n","import Zdog from 'zdog';\n\n// colors\nconst COLOR_PINK = '#F8B';\nconst COLOR_BLUSH = '#F5A';\nconst COLOR_BLACK = '#333';\nconst COLOR_RED = '#D03';\n\n// 1 TAU = 1 round\nvar TAU = Zdog.TAU;\n\nconst generateIllo = () =>\n\tnew Zdog.Illustration({\n\t\telement: '.kirby-face-canvas',\n\t\tzoom: 3\n\t});\n\nconst addBodyToIllo = illo =>\n\tnew Zdog.Shape({\n\t\tstroke: 22,\n\t\taddTo: illo,\n\t\tcolor: COLOR_PINK\n\t});\n\nconst addFaceToBody = body =>\n\tnew Zdog.Anchor({\n\t\ttranslate: { z: 10.5 },\n\t\taddTo: body\n\t});\n\nconst addEyeToFace = (face, rate) => {\n\tconst eyeGroup = new Zdog.Group({\n\t\taddTo: face,\n\t\ttranslate: { x: 2.4 * rate, y: -2 },\n\t\trotate: { x: 0.1 }\n\t});\n\t// eye\n\tnew Zdog.Ellipse({\n\t\twidth: 1.4,\n\t\theight: 5.5,\n\t\taddTo: eyeGroup,\n\t\tstroke: 1,\n\t\tcolor: COLOR_BLACK,\n\t\tfill: true\n\t});\n\t// eye highlight\n\tnew Zdog.Ellipse({\n\t\twidth: 1,\n\t\theight: 2,\n\t\taddTo: eyeGroup,\n\t\ttranslate: { y: -1.5, z: 0.5 },\n\t\tstroke: 0.5,\n\t\tcolor: '#FFF',\n\t\tfill: true\n\t});\n};\n\nconst addCheeckToFace = (face, rate) => {\n\tnew Zdog.Ellipse({\n\t\twidth: 2.5,\n\t\theight: 1,\n\t\ttranslate: { x: 5.7 * rate, y: 1.5, z: -1 },\n\t\trotate: { y: -10 * rate },\n\t\taddTo: face,\n\t\tcolor: COLOR_BLUSH,\n\t\tstroke: 1\n\t});\n};\n\nconst addMouthToFace = face => {\n\t// mouth\n\tnew Zdog.Shape({\n\t\tpath: [\n\t\t\t{ x: 0, y: 0 },\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: 1.1, y: 0 },\n\t\t\t\t\t{ x: 1.1, y: 0.2 },\n\t\t\t\t\t{ x: 1.1, y: 0.5 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: 1.1, y: 1.1 },\n\t\t\t\t\t{ x: 0.2, y: 1.8 },\n\t\t\t\t\t{ x: 0, y: 1.8 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tbezier: [\n\t\t\t\t\t{ x: -0.2, y: 1.8 },\n\t\t\t\t\t{ x: -1.1, y: 1.1 },\n\t\t\t\t\t{ x: -1.1, y: 0.5 }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ bezier: [{ x: -1.1, y: 0.2 }, { x: -1.1, y: 0 }, { x: 0, y: 0 }] }\n\t\t],\n\t\taddTo: face,\n\t\ttranslate: { y: 2, z: -0.5 },\n\t\tstroke: 1,\n\t\tcolor: COLOR_RED,\n\t\tfill: true\n\t});\n};\n\nconst initIllo = () => {\n\tconst illo = generateIllo();\n\tconst body = addBodyToIllo(illo);\n\tconst face = addFaceToBody(body);\n\taddEyeToFace(face, 1);\n\taddEyeToFace(face, -1);\n\taddCheeckToFace(face, 1);\n\taddCheeckToFace(face, -1);\n\taddMouthToFace(face);\n\n\treturn illo;\n};\n\nconst illo = initIllo();\nillo.updateRenderGraph();\n\nlet movementX = 0;\nlet movementY = 0;\n\nconst animate = () => {\n\t// illo.rotate.y += TAU / 360;\n\tillo.rotate.x += (TAU / 360) * movementY;\n\tillo.rotate.y += (TAU / 360) * movementX;\n\tillo.translate.x += (TAU / 360) * -1 * movementX;\n\tillo.translate.y += (TAU / 360) * -1 * movementY;\n\tillo.updateRenderGraph();\n\n\trequestAnimationFrame(animate);\n};\n\nanimate();\n\nconst canvasEl = document.querySelector('.kirby-face-canvas');\n\ncanvasEl.addEventListener('mousemove', e => {\n\tmovementX = -1 * e.movementX;\n\tmovementY = -1 * e.movementY;\n});\n","import '../sass/main.scss';\n\nimport './zdog';\nimport './kirby';\nimport './kirby-face';\n"]}